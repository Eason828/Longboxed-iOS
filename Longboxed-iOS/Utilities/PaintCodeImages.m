//
//  PaintCodeImages.m
//  Longboxed-iOS
//
//  Created by Jay Hickey on 9/17/14.
//  Copyright (c) 2014 Jay Hickey. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "PaintCodeImages.h"


@implementation PaintCodeImages

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawCheckmarkWithFillColor: (UIColor*)fillColor width: (CGFloat)width;
{

    //// Frames
    CGRect frame = CGRectMake(0, 0, width, width);


    //// Bezier 2 Drawing
    UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
    [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.90866 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.11540 * CGRectGetHeight(frame))];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.98605 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.19660 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.90864 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.11538 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.98605 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.19660 * CGRectGetHeight(frame))];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.40759 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.80356 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.98605 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.19660 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.57928 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.62341 * CGRectGetHeight(frame))];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.33257 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.88228 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.36167 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.85174 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.33257 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.88228 * CGRectGetHeight(frame))];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.33048 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.88462 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.33249 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.88251 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.33048 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.88462 * CGRectGetHeight(frame))];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.00000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.53832 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.33026 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.88485 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.00000 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.53832 * CGRectGetHeight(frame))];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.07740 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.45710 * CGRectGetHeight(frame))];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.33019 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.72234 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.07740 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.45710 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.23257 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.61991 * CGRectGetHeight(frame))];
    [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(frame) + 0.90864 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.11538 * CGRectGetHeight(frame)) controlPoint1: CGPointMake(CGRectGetMinX(frame) + 0.50187 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.54219 * CGRectGetHeight(frame)) controlPoint2: CGPointMake(CGRectGetMinX(frame) + 0.90864 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.11538 * CGRectGetHeight(frame))];
    [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 0.90866 * CGRectGetWidth(frame), CGRectGetMinY(frame) + 0.11540 * CGRectGetHeight(frame))];
    [bezier2Path closePath];
    bezier2Path.lineCapStyle = kCGLineCapRound;

    [fillColor setFill];
    [bezier2Path fill];
}

+ (void)drawLongboxedIconWithColor: (UIColor*)color width: (CGFloat)width;
{

    //// Frames
    CGRect frame = CGRectMake(0, 0, width, width);

    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame) + floor(CGRectGetWidth(frame) * 0.00000 + 0.5), CGRectGetMinY(frame) + floor(CGRectGetHeight(frame) * 0.00813 + 0.01) + 0.49, floor(CGRectGetWidth(frame) * 1.00001 + 0.5) - floor(CGRectGetWidth(frame) * 0.00000 + 0.5) + 0, floor(CGRectGetHeight(frame) * 1.00416 + 0.5) - floor(CGRectGetHeight(frame) * 0.00813 + 0.01) - 0.49);


    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, width, width)];
    [UIColor.whiteColor setFill];
    [rectanglePath fill];


    //// Group
    {
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.64582 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.43325 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.35418 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.43325 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.29758 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.48541 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.32292 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.43325 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.29758 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.45660 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.35418 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53757 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.29758 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.51422 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.32292 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53757 * CGRectGetHeight(group))];
        [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.64582 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53757 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.70242 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.48541 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.67708 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.53757 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.70242 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.51422 * CGRectGetHeight(group))];
        [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.64582 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.43325 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.70242 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.45660 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.67708 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.43325 * CGRectGetHeight(group))];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        [color setFill];
        [bezier2Path fill];


        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = UIBezierPath.bezierPath;
        [bezier4Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.92451 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.07547 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06955 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.03385 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.03119 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.25212 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.05906 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.31990 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.28526 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.02532 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.31296 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.05906 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.89242 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.17579 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.05906 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.95173 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.11141 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.82421 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.94094 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.89242 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.88857 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.94094 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.95175 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.94094 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.31990 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.25212 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.97468 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.31296 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.28526 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.06955 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.92451 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.99998 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.03119 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.96613 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [bezier4Path closePath];
        [bezier4Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.11321 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10433 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.88678 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10433 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.88678 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21735 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.11321 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.21735 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.11321 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.10433 * CGRectGetHeight(group))];
        [bezier4Path closePath];
        [bezier4Path moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.82421 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.89566 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.17579 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.89566 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.17226 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.89241 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.17385 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.89566 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.17226 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.89420 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.17226 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.32167 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.82772 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.32167 * CGRectGetHeight(group))];
        [bezier4Path addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.82772 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.89242 * CGRectGetHeight(group))];
        [bezier4Path addCurveToPoint: CGPointMake(CGRectGetMinX(group) + 0.82421 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.89566 * CGRectGetHeight(group)) controlPoint1: CGPointMake(CGRectGetMinX(group) + 0.82772 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.89420 * CGRectGetHeight(group)) controlPoint2: CGPointMake(CGRectGetMinX(group) + 0.82614 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.89566 * CGRectGetHeight(group))];
        [bezier4Path closePath];
        bezier4Path.miterLimit = 4;

        [color setFill];
        [bezier4Path fill];
    }
}

#pragma mark Generated Images

+ (UIImage*)imageOfCheckmarkWithFillColor: (UIColor*)fillColor width: (CGFloat)width;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(123, 123), NO, 0.0f);
    [PaintCodeImages drawCheckmarkWithFillColor: fillColor width: width];
    UIImage* imageOfCheckmark = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfCheckmark;
}

+ (UIImage*)imageOfLongboxedIconWithColor: (UIColor*)color width: (CGFloat)width;
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(123, 123), NO, 0.0f);
    [PaintCodeImages drawLongboxedIconWithColor: color width: width];
    UIImage* imageOfLongboxedIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfLongboxedIcon;
}

@end
